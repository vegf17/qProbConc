benchmarking parser/ProbDinPhil3
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
(("ProbDinPhil3",(1,[]),200),(Paral (Paral (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st1") (Num 1)) (Or (Asg "st1" (Num 2)) Skip)) (Or (Asg "try1" (Num 1)) (Asg "try1" (Num 0)))) (Whl (Equ (Id "try1") (Num 1)) (Seq (P (1 % 2) (Asg "chops1" (Num (-1))) (Asg "chops1" (Num 1))) (IfC (Equ (Id "chops1") (Num 1)) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try1" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))))))) (Asg "st1" (Num 0))) (Whl (Equ (Id "st1") (Num 0)) (Or (Asg "st1" (Num 1)) Skip))) (Asg "eat1" (PlusE (Id "eat1") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st2") (Num 1)) (Or (Asg "st2" (Num 2)) Skip)) (Or (Asg "try2" (Num 1)) (Asg "try2" (Num 0)))) (Whl (Equ (Id "try2") (Num 1)) (Seq (P (1 % 2) (Asg "chops2" (Num (-1))) (Asg "chops2" (Num 1))) (IfC (Equ (Id "chops2") (Num 1)) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs1") (Num 1)) (Seq (Asg "cs1" (MinusE (Id "cs1") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))) (Seq (Await (Equ (Id "cs1") (Num 1)) (Asg "cs1" (MinusE (Id "cs1") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try2" (Num 0))) (Asg "cs1" (PlusE (Id "cs1") (Num 1))))))))) (Asg "st2" (Num 0))) (Whl (Equ (Id "st2") (Num 0)) (Or (Asg "st2" (Num 1)) Skip))) (Asg "eat2" (PlusE (Id "eat2") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1)))) (Asg "cs1" (PlusE (Id "cs1") (Num 1)))))) (Whl BTrue (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Whl (Equ (Id "st3") (Num 1)) (Or (Asg "st3" (Num 2)) Skip)) (Or (Asg "try3" (Num 1)) (Asg "try3" (Num 0)))) (Whl (Equ (Id "try3") (Num 1)) (Seq (P (1 % 2) (Asg "chops3" (Num (-1))) (Asg "chops3" (Num 1))) (IfC (Equ (Id "chops3") (Num 1)) (Seq (Await (Equ (Id "cs3") (Num 1)) (Asg "cs3" (MinusE (Id "cs3") (Num 1)))) (IfC (Equ (Id "cs2") (Num 1)) (Seq (Asg "cs2" (MinusE (Id "cs2") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs3" (PlusE (Id "cs3") (Num 1))))) (Seq (Await (Equ (Id "cs2") (Num 1)) (Asg "cs2" (MinusE (Id "cs2") (Num 1)))) (IfC (Equ (Id "cs3") (Num 1)) (Seq (Asg "cs3" (MinusE (Id "cs3") (Num 1))) (Asg "try3" (Num 0))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))))))) (Asg "st3" (Num 0))) (Whl (Equ (Id "st3") (Num 0)) (Or (Asg "st3" (Num 1)) Skip))) (Asg "eat3" (PlusE (Id "eat3") (Num 1)))) (Asg "cs3" (PlusE (Id "cs3") (Num 1)))) (Asg "cs2" (PlusE (Id "cs2") (Num 1))))),[("st1",1),("st2",1),("st3",1),("cs1",1),("cs2",1),("cs3",1),("try1",0),("try2",0),("try3",0),("chops1",0),("chops2",0),("chops3",0),("eat1",0),("eat2",0),("eat3",0)],[],┌  ┐
│  │
└  ┘))
time                 17.04 s    (16.32 s .. 17.78 s)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 17.26 s    (17.13 s .. 17.44 s)
std dev              179.4 ms   (18.18 ms .. 229.3 ms)
variance introduced by outliers: 19% (moderately inflated)

